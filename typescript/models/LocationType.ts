/* tslint:disable */
/* eslint-disable */
/**
 * Geocoding
 * With the Geocoding service you can find locations by converting street addresses into GPS-coordinates and vice versa. The Places service allows to search for millions of shops and prominent points of interest in various categories.
 *
 * The version of the OpenAPI document: 1.18
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Distinguishes different types of Locations:  
 *  * `LOCALITY` - Represents a locality (town, city or place).  
 *  * `POSTAL_CODE` - Represents a postal code area.  
 *  * `STREET` - Represents a street, or a section of a street.  
 *  * `EXACT_ADDRESS` - An address that is contained exactly in the geocoding data.   
 *  * `INTERPOLATED_ADDRESS` - An address that was interpolated from an address range.   
 *  * `INTERSECTION` - An at-grade junction where two streets meet.   
 *  * `POINT_OF_INTEREST` - A point of interest, like e.g. a shop, a service, or a museum.
 * @export
 */
export const LocationType = {
    LOCALITY: 'LOCALITY',
    POSTAL_CODE: 'POSTAL_CODE',
    STREET: 'STREET',
    EXACT_ADDRESS: 'EXACT_ADDRESS',
    INTERPOLATED_ADDRESS: 'INTERPOLATED_ADDRESS',
    INTERSECTION: 'INTERSECTION',
    POINT_OF_INTEREST: 'POINT_OF_INTEREST'
} as const;
export type LocationType = typeof LocationType[keyof typeof LocationType];


export function instanceOfLocationType(value: any): boolean {
    for (const key in LocationType) {
        if (Object.prototype.hasOwnProperty.call(LocationType, key)) {
            if (LocationType[key as keyof typeof LocationType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function LocationTypeFromJSON(json: any): LocationType {
    return LocationTypeFromJSONTyped(json, false);
}

export function LocationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationType {
    return json as LocationType;
}

export function LocationTypeToJSON(value?: LocationType | null): any {
    return value as any;
}

