/* tslint:disable */
/* eslint-disable */
/**
 * Geocoding
 * With the Geocoding service you can find locations by converting street addresses into GPS-coordinates and vice versa. The Places service allows to search for millions of shops and prominent points of interest in various categories.
 *
 * The version of the OpenAPI document: 1.18
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Defines the area as [GeoJSON](https://datatracker.ietf.org/doc/html/rfc7946) geometry. Supported geometry types are Polygon and MultiPolygon. Geometries that cause too long processing times will be rejected. In this case an error response is returned that explains the reason.
 * @export
 * @interface Area
 */
export interface Area {
    /**
     * The geometry of the area as a [GeoJSON](https://datatracker.ietf.org/doc/html/rfc7946) representation (WGS84/EPSG:4326).
     * @type {string}
     * @memberof Area
     */
    geometry: string;
}

/**
 * Check if a given object implements the Area interface.
 */
export function instanceOfArea(value: object): value is Area {
    if (!('geometry' in value) || value['geometry'] === undefined) return false;
    return true;
}

export function AreaFromJSON(json: any): Area {
    return AreaFromJSONTyped(json, false);
}

export function AreaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Area {
    if (json == null) {
        return json;
    }
    return {
        
        'geometry': json['geometry'],
    };
}

export function AreaToJSON(value?: Area | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'geometry': value['geometry'],
    };
}

