/* tslint:disable */
/* eslint-disable */
/**
 * Geocoding
 * With the Geocoding service you can find locations by converting street addresses into GPS-coordinates and vice versa. The Places service allows to search for millions of shops and prominent points of interest in various categories.
 *
 * The version of the OpenAPI document: 1.18
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Suggestion } from './Suggestion';
import {
    SuggestionFromJSON,
    SuggestionFromJSONTyped,
    SuggestionToJSON,
} from './Suggestion';
import type { Warning } from './Warning';
import {
    WarningFromJSON,
    WarningFromJSONTyped,
    WarningToJSON,
} from './Warning';

/**
 * The list of suggestions for the search text.
 * @export
 * @interface SuggestionsByTextResponse
 */
export interface SuggestionsByTextResponse {
    /**
     * The list of suggested search texts.
     * @type {Array<Suggestion>}
     * @memberof SuggestionsByTextResponse
     */
    suggestions: Array<Suggestion>;
    /**
     * A list of warnings concerning the validity of the result.
     * @type {Array<Warning>}
     * @memberof SuggestionsByTextResponse
     */
    warnings?: Array<Warning>;
}

/**
 * Check if a given object implements the SuggestionsByTextResponse interface.
 */
export function instanceOfSuggestionsByTextResponse(value: object): value is SuggestionsByTextResponse {
    if (!('suggestions' in value) || value['suggestions'] === undefined) return false;
    return true;
}

export function SuggestionsByTextResponseFromJSON(json: any): SuggestionsByTextResponse {
    return SuggestionsByTextResponseFromJSONTyped(json, false);
}

export function SuggestionsByTextResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionsByTextResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'suggestions': ((json['suggestions'] as Array<any>).map(SuggestionFromJSON)),
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(WarningFromJSON)),
    };
}

export function SuggestionsByTextResponseToJSON(value?: SuggestionsByTextResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'suggestions': ((value['suggestions'] as Array<any>).map(SuggestionToJSON)),
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(WarningToJSON)),
    };
}

